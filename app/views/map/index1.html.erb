<!DOCTYPE html>
<html>
    <head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>Live Locations</title>
	    <%= javascript_include_tag :defaults %>
        <%= javascript_include_tag "d3.js" %>

	    <script src="http://code.jquery.com/mobile/1.0b1/jquery.mobile-1.0b1.min.js"></script>
        <style type="text/css">
            .chart div {
               font: 10px sans-serif;
               background-color: steelblue;
               text-align: right;
               padding: 3px;
               margin: 1px;
               color: white;
             }
            .chart rect {
              stroke: white;
              fill: grey;
            }
            .rect {
            /*  fill: steelblue; */
            }
            .shade {
               background-color: #1a82f7;
               /* background-image: url(images/fallback-gradient.png); */
               background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from(#2F2727), to(#1a82f7));
               background-image: -webkit-linear-gradient(top, #2F2727, #1a82f7);
               background-image:    -moz-linear-gradient(top, #2F2727, #1a82f7);
               background-image:     -ms-linear-gradient(top, #2F2727, #1a82f7);
               background-image:      -o-linear-gradient(top, #2F2727, #1a82f7);
            }

            .label {
              font: 8px "lucida grande";
              font-family:"lucida grande",tahoma,verdana,arial,sans-serif;
              stroke: white;
            }

            .rule {
              font: 10px sans-serif;
            }

            .text {
              font: 10px sans-serif;
            }
            .node-text {
              font: 6px sans-serif;
            }
            .tooltip {
              font: 10px sans-serif;
            }
        </style>
        <link rel="stylesheet" href="http://code.jquery.com/mobile/1.0b1/jquery.mobile-1.0b1.min.css">
    </head>
    <div data-role="page" id="mainpage">
        <div data-role="header">
            <h1>Live Locations</h1>
            <%= link_to 'Back', '#', {"class" => "ui-btn-left", "data-rel"=>"back", "data-icon"=>"arrow-l"} %>
        </div>
        <div data-role="content" id="graph">
            <div class="shade"> </div>
                <script type="text/javascript">
                    $('#mainpage').live('pagecreate',function(event){
                        d3.json('/entities/coords', function (json) {

                        var names = {0 : "Jeff Hsu", 1: "Kaifei Chen", 2: "Ben Zhang"
                            , 3: "Fred Jiang", 4: "Mike Liang"};
                        var t = 1297110663, // start time (seconds since epoch)
                            v = 70, // start value (subscribers)
                            data = d3.range(5).map(next); // starting dataset
                          
                        function next() {
                            return {
                                time: ++t,
                                value: v = {"x": Math.random(), "y": Math.random()} 
                            };
                        }
                        
                        setInterval(function() {
                          data.shift();
                          data.push(next());
                          redraw();
                        }, 2500);
                
                        var cub = 18.0;

                        // var h = 1000;
                        var h = 250;
                        var vis = d3.select("#graph")
                        .append("svg:svg")
                        .attr("width", screen.width)
                        .attr("height", screen.height);
                    
                        var gradient = vis.append("svg:defs")
                          .append("svg:linearGradient")
                            .attr("id", "gradient")
                            .attr("x1", "0%")
                            .attr("y1", "0%")
                            .attr("x2", "100%")
                            .attr("y2", "100%")
                            .attr("spreadMethod", "pad");

                        gradient.append("svg:stop")
                            .attr("offset", "0%")
                            .attr("stop-color", "#9dcafc")
                            .attr("stop-opacity", 1);

                        gradient.append("svg:stop")
                            .attr("offset", "100%")
                            .attr("stop-color", "#1a82f7")
                            .attr("stop-opacity", 1);

                        var gradient2 = vis.append("svg:defs")
                          .append("svg:linearGradient")
                            .attr("id", "gradient2")
                            .attr("x1", "0%")
                            .attr("y1", "0%")
                            .attr("x2", "100%")
                            .attr("y2", "100%")
                            .attr("spreadMethod", "pad");

                        gradient2.append("svg:stop")
                            .attr("offset", "0%")
                            .attr("stop-color", "#9287fb")
                            .attr("stop-opacity", 1);

                        gradient2.append("svg:stop")
                            .attr("offset", "100%")
                            .attr("stop-color", "#1a0da1")
                            .attr("stop-opacity", 1);

                        var gradient3 = vis.append("svg:defs")
                          .append("svg:linearGradient")
                            .attr("id", "gradient3")
                            .attr("x1", "0%")
                            .attr("y1", "0%")
                            .attr("x2", "100%")
                            .attr("y2", "100%")
                            .attr("spreadMethod", "pad");

                        gradient3.append("svg:stop")
                            .attr("offset", "0%")
                            .attr("stop-color", "#44fbc4")
                            .attr("stop-opacity", 1);

                        gradient3.append("svg:stop")
                            .attr("offset", "100%")
                            .attr("stop-color", "#02a171")
                            .attr("stop-opacity", 1);

                        var gradient4 = vis.append("svg:defs")
                          .append("svg:linearGradient")
                            .attr("id", "gradient4")
                            .attr("x1", "0%")
                            .attr("y1", "0%")
                            .attr("x2", "100%")
                            .attr("y2", "100%")
                            .attr("spreadMethod", "pad");

                        gradient4.append("svg:stop")
                            .attr("offset", "0%")
                            .attr("stop-color", "#000000")
                            .attr("stop-opacity", 1);

                        gradient4.append("svg:stop")
                            .attr("offset", "100%")
                            .attr("stop-color", "#4C4C4C")
                            .attr("stop-opacity", 1);

                        var gradient5 = vis.append("svg:defs")
                          .append("svg:linearGradient")
                            .attr("id", "gradient5")
                            .attr("x1", "100%")
                            .attr("y1", "0%")
                            .attr("x2", "100%")
                            .attr("y2", "100%")
                            .attr("spreadMethod", "pad");

                        gradient5.append("svg:stop")
                            .attr("offset", "0%")
                            .attr("stop-color", "#FFFFFF")
                            .attr("stop-opacity", 1);

                        gradient5.append("svg:stop")
                            .attr("offset", "100%")
                            .attr("stop-color", "#808080")
                            .attr("stop-opacity", 1);

                        function mouseoverOffices(uri) {
                            return function(d, i) {
                                d3.selectAll(".node-text")
                                  .remove();
                                var length = uri.length;
                                var x = parseFloat(d3.select(this).attr("x")) + 10;
                                var y = parseFloat(d3.select(this).attr("y")) - 15;
                                var node = vis.append("svg:g")
                                   .attr("class", "node-text");
                                node.append("svg:rect")
                                   //.style("fill", "url(#gradient3)")
                                   .attr("class", "node-text")
                                   .attr("x", x )
                                   .attr("y", y) 
                                   .attr("width", length * 5.0)
                                   .attr("height", cub);
                               
                                node.append("svg:text")
                                   .attr("text-anchor", "middle")
                                   .attr("class", "node-text")
                                   .attr("dx", "6.8em")
                                   .attr("dy", "1.2em")
                                   .attr("x", x + 50 )
                                   .attr("y", y )
				   .style("fill", "white")
				   .style("font-size","10px")
                                   .text(function(d,i) { return uri; });
                              
                                d3.select(this)
				  .style("fill", "gray") 
                                  .transition()
                                  .style("fill", "url(#gradient4)");
                            };
                        }

                        function mouseoutOffices(grad) {
                            return function(d, i) {
                                d3.selectAll(".node-text")
                                  .remove();
                                d3.select(this) 
				   .transition()
				   .delay(0.00000000000000000000000000000000000000000000000000000000000000000000001)
				   .duration(0.00000000000000000000000000000000000000000000000000000000000000000000001)
				   .ease("quad")
				   //.ease("elastic", 10000, .45)
                                   .style("fill", grad);
                            };
                        }

                        function clickOffices(link) {
                            return function(d, i) {
                                window.location = link;
                            };
                        }

                        function cubicles(x, y, uri, v,  x_size, y_size, grad) {
                                    v.append("svg:rect")
                                    .attr("x",  x * cub)
                                    .attr("y",  y * cub)
                                    .attr("width", cub * y_size)
                                    .attr("height", cub * x_size)
				    .style("fill", "gray") 
                                    .style("fill", grad)
                                    .attr("class", "rect")
                                    .on("click", clickOffices('/liveSynergy' + uri))
                                    .on("mouseover", mouseoverOffices('/liveSynergy' + uri))
                                    .on("mouseout", mouseoutOffices(grad));
                        }	

                        function rectangle(x, y, v, height, width) {
                            v.append("svg:rect")
                            .attr("x", x * cub)
                            .attr("y", y * cub)
                            .attr("width", width * cub)
                            .attr("height", height * cub)
                            .style("fill", "url(#gradient3)")
                            .attr("class", "rect")
                            .on("mouseover", mouseoverOffices());
                        }

                        // elevator
                        //vis.append("svg:rect")
                        //.attr("x", 0)
                        //.attr("y", 16 * cub)
                        //.attr("width", 5 * cub)
                        //.attr("height", 5 * cub)
                        //.attr("fill-opacity", "0")
                        //attr("class", "rect");

                        vis.append("svg:rect")
                        .attr("x", "0")
                        .attr("y", "0")
                        .attr("width", "400")
                        .attr("height", "600")
                        .attr("class", "rect")
                        .style("fill", "#CEC4BE");

                        var cub_x = 5;
                        // top row of cubicles	
                        //cubicles(cub_x, 1, vis, 6, 2);
                        //cubicles(cub_x + 3, 2, vis, 5, 2);
                        //cubicles(cub_x + 6, 1, vis, 6, 2);
                        //cubicles(cub_x + 9, 2, vis, 5, 2);
                        //cubicles(cub_x + 12, 1, vis, 3, 2);
                        //cubicles(cub_x + 12, 4, vis, 3, 1);

                        // bottom row of cubicles	
                        //cubicles(4, 25, vis, 4, 2);
                        //cubicles(7, 25, vis, 3, 2);
                        //cubicles(10, 25, vis, 4, 2);
                        //cubicles(13, 25, vis, 3, 2);

                        // middle-right column of cubicles	
                        //cubicles(cub_x + 12,  8, vis, 1, 2);
                        //cubicles(cub_x + 12, 10, vis, 2, 4);
                        //cubicles(cub_x + 12, 13, vis, 2, 4);
                        //cubicles(cub_x + 12, 16, vis, 2, 4);
                        //cubicles(cub_x + 12, 19, vis, 2, 4);
                        //cubicles(cub_x + 12, 22, vis, 1, 4);

                        var cubs = json;

			var gradient_map = {
			  "open-area" : "url(#gradient3)",
			  "phone-room": "url(#gradient3)",
			  "mail-room": "url(#gradient3)",
			  "office": "url(#gradient2)",
			  "focus-room": "url(#gradient3)",
			  "conference-room": "url(#gradient3)",
			  "kitchen": "url(#gradient2)",
			  "cubicle": "url(#gradient)"
			};

			for ( var z = 0; z < cubs.length; z++ ){
			  var cubicle = cubs[z];
			  var coords = cubicle.coordinates.split(",");
			  var x = parseFloat(coords[0]);
                          var y = parseFloat(coords[1]);
                          var name = cubicle.name;
			  var uri = cubicle.uri;
			  var subtype = cubicle.subtype;
			  var dims = cubicle.dimensions.split(",");
			  var x_size = parseFloat(dims[0]);
			  var y_size = parseFloat(dims[1]);
			  cubicles(x,y,uri,vis,x_size,y_size,gradient_map[subtype]);
			}

                        // offices
                        //offices(1,25,vis,2,1);
                        //offices(1,2,vis,2,1);
                        //offices(0,8,vis,1,8);
                        
                        //rectangle(0,10,vis, 4, 4);
                        //rectangle(4,10,vis, 4, 2);
                        //rectangle(6,10,vis, 4, 2.5);
                        //rectangle(8.5,10,vis, 4, 2.5);
                        //rectangle(11,10,vis, 4, 2.5);
                        //rectangle(13.5,10,vis, 2, 2.5);
                        //rectangle(13.5,12,vis, 2, 2.5);

                        var x = d3.scale.linear().domain([0,1])
                        // .range([screen.width / 2 - 400,screen.width / 2 + 400]),
                        .range([20, 150]),
                        y = d3.scale.linear().domain([0,1]).range([10,h]),
                        r = d3.scale.linear().domain([0,1]).range([5,10]),
                        c = d3.scale.linear().domain([0,1])
                        .range(["hsl(250, 50%, 50%)", "hsl(350, 100%, 50%)"])
                        .interpolate(d3.interpolateHsl);
                        

                        // change this to node to contain text.
                        node = vis.selectAll("g.node")
                              .data(data)
                              // .filter(function(d) { return !d.children; }))
                              .enter().append("svg:g").attr("class", "node");
                        // .attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });

                      node.append("svg:circle")
                        .attr("cx", function(d) { return x(d.value.x) })
                        .attr("cy", function(d) { return y(d.value.y) })
                        .attr("stroke-width", "none")
                        .attr("fill", function() { return c(Math.random()) })
                        .attr("fill-opacity", .5)
                        .attr("r", function() { return r(Math.random()) }).append("svg:title")
                        .text(function(d) { return 'hi'; });

                      node.append("svg:text")
                        .attr("class", "text")
                        .attr("text-anchor", "middle")
                        // .attr("dy", ".3em")
                        .attr("x", function(d) { return x(d.value.x) })
                        .attr("y", function(d) { return y(d.value.y) })
                        .text(function(d,i) { return names[i]; });
                        
                        // .attr("visibility", "hidden")
                        
                        
                        var y2 = d3.scale.linear().domain([0,1]).range([h/2 - 20, h/2 + 20]);
                        var del = d3.scale.linear().domain([0,1]).range([0,1]);

                        function redraw() { 
                        
                        d3.selectAll("g.node").transition()
                        .attr("transform", function(d) { 
                            return "translate(" + (x(Math.random())- d.value.x) + "," + (y(Math.random())- d.value.y) + ")"; 
                        })
                        // .attr("cx", function() { return text_x  })
                        // .attr("cy", function() { return text_y })
                        .attr("visibility", "visible")
                        .delay(function(d,i) { return i * del(Math.random()) })
                        .duration(1500);
                            // 		
                        // d3.selectAll("text").transition()
                        // .attr("x", function() { return text_x })
                        // .attr("y", function() { return text_y })
                        // .attr("visibility", "visible")
                        // .delay(function(d,i) { return i * del(Math.random()) })
                        // .duration(1500);
                        // 
                }
                    // .ease("elastic", 10, .45);

                    // vis.selectAll("circle")
                    // 		.data(data)
                    // 		.enter().append("svg:circle")
                    // 		.attr("cx", function(d) { return x(d.x) })
                    // 		.attr("cy", function(d) { return y(d.y) })
                    // 		.attr("stroke-width", "none")
                    // 		.attr("fill", function() { return c(Math.random()) })
                    // 		.attr("fill-opacity", .5)
                    // 		.attr("visibility", "hidden")
                    // 		.attr("r", function() { return r(Math.random()) })
                    // 		.on("mouseover", function() {
                    // 		d3.select(this).transition()
                    // 		.attr("cy", function() { return y2(Math.random()) })
                    // 		.delay(0)
                    // 		.duration(2000)
                    // 		.ease("elastic", 10, .3)
                    // 		
                    // 
                    // // var data = [5, 15, 10, 16, 23, 42, 15, 16, 40, 16, 23, 42];
                    // 	
                    //  var t = 1297110663, // start time (seconds since epoch)
                    //       v = 70, // start value (subscribers)
                    //       data = d3.range(13).map(next); // starting dataset
                    //   
                    //   function next() {
                    //     return {
                    //       time: ++t,
                    //       value: v = ~~Math.max(10, Math.min(90, v + 10 * (Math.random() - .5)))
                    //     };
                    //   }
                    // 
                    // setInterval(function() {
                    // 		      data.shift();
                    // 		      data.push(next());
                    // 		      redraw();
                    // 		    }, 1500);
                    // 		
                    // var w = 20,
                    // 	h = 250;
                    // 
                    // var x = d3.scale.linear()
                    //      .domain([0, 1])
                    //      .range([0, w]);
                    // 
                    // var y = d3.scale.linear()
                    //      .domain([0, 100])
                    //      .rangeRound([0, h]);
                    // 	
                    // var chart = d3.select("#graph")
                    //     .append("svg:svg")
                    //       .attr("class", "chart")
                    //       .attr("width", w * data.length - 1 + 40)
                    //       .attr("height", h + 60)
                    // 	  .append("svg:g")
                    // 	  .attr("transform", "translate(25, 15)");
                    // 	
                    // chart.selectAll("line")
                    //      .data(y.ticks(10))
                    //    .enter().append("svg:line")
                    //      .attr("x1", 0)
                    //      .attr("x2", w * data.length)
                    //      .attr("y1", function(d,i) { return h - y(d); } )
                    //      .attr("y2", function(d,i) { return h - y(d); } )
                    //      .attr("stroke", "#ccc");
                    // 
                    // 
                    // chart.selectAll("rect")
                    //      .data(data)
                    //      .enter().append("svg:rect")
                    //      .attr("x", function(d,i) { return x(i) - .5;})
                    // 	 .attr("y", function(d,i) { return h - y(d.value); })
                    //      .attr("width", w)
                    //      .attr("height", function(d,i) { return y(d.value);});
                    // 
                    // chart.selectAll("text")
                    //      .data(data)
                    //      .enter().append("svg:text")
                    // 	 .attr("class", "label")
                    //      .attr("x", function(d,i) { return w * i;})
                    //      .attr("y", function(d) { 
                    // 		return h - y(d.value); })
                    // 		         .attr("dx", 14) // padding-right
                    // 		         .attr("dy", "1em") // vertical-align: middle
                    // 		         .attr("text-anchor", "end") // text-align: right
                    // 		         .text(function(d, i) { return d.value; });
                    // 		
                    // chart.selectAll("text.rule")
                    // 				    .data((y.ticks(10)))
                    // 				  .enter().append("svg:text")
                    // 				    .attr("class", "rule")
                    // 				    .attr("x", 0)
                    // 				    .attr("y", function(d) { return h - y(d); } )
                    // 				    .attr("dx", -9)
                    // 					.attr("dy", 2.5)
                    // 				    .attr("text-anchor", "middle")
                    // 				    .text(String);
                    // 			
                    // 
                    //  chart.append("svg:line")
                    //      .attr("x1", 0)
                    // 	 .attr("y1", h)
                    //      .attr("x2", w * data.length)
                    // 	 .attr("y2", h)
                    //      .attr("stroke", "#000");
                    // 
                    // 
                    //  chart.append("svg:text")
                    //      .attr("x", (w * data.length) / 2 - 25)
                    // 	 .attr("y", h + 30)
                    //      .text("time");
                    // 
                    // 	function redraw() {
                    // 				       
                    // 				         // Update…
                    // 				         chart.selectAll("rect")
                    // 				             .data(data)
                    // 				           .transition()
                    // 				             .duration(1000)
                    // 				             .attr("y", function(d) { return h - y(d.value) - .5; })
                    // 				             .attr("height", function(d) { return y(d.value); });
                    // 				       
                    // 			chart.selectAll("text")
                    // 			     .data(data)
                    // 			     .transition()
                    // 		             .duration(1000)
                    // 			     // .enter().append("svg:text")
                    // 				 .attr("class", "label")
                    // 			     .attr("x", function(d,i) { return w * i;})
                    // 			     .attr("y", function(d) { 
                    // 					return h - y(d.value); })
                    // 					         .attr("dx", 14) // padding-right
                    // 					         .attr("dy", "1em") // vertical-align: middle
                    // 					         .attr("text-anchor", "end") // text-align: right
                    // 					         .text(function(d, i) { return d.value; });
                    // 				
                    // 				       }
                    // 	
                        
                });
	});  
        </script>
    </div>
</html>


